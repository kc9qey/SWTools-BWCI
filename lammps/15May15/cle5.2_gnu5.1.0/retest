#!/bin/ksh

############################## standard interface to /sw tools
# Input:
#   Environment variables
#     SW_BLDDIR    current directory (PWD) minus /autofs/na1_ stuff
#     SW_ENVFILE   file to be sourced which has alternate prog environment
#                     only to be used in special circumstances
#     SW_WORKDIR   work dir that local script can use
# Output:
#   Return code of 0=success or 1=failure   or 2=job submitted
#
# Notes:
#   If this script is called from swtest, then swtest requires 
#   SW_WORKDIR to be set.  Then swtest adds a unique path to what 
#   user gave swtest (action+timestamp+build) and provides this
#   script with a uniquely valued SW_WORKDIR.  swtest will
#   automatically remove this unique workspace when retest is done.
##################################################################

# exit 3 is a signal to the sw infrastructure that this template has not 
# been updated; please delete it when ready

if [ -z $SW_BLDDIR ]; then
  echo "Error: SW_BLDDIR not set!"
  exit 1
else
  cd $SW_BLDDIR
fi

if [ -z $SW_ENVFILE ]; then
  ### Set Environment (do not remove this line only change what is in between)
  . ${MODULESHOME}/init/ksh
  . ${SW_BLDDIR}/remodule
  ### End Environment (do not remove this line only change what is in between)
else
  . $SW_ENVFILE
fi

############################## app specific section
#  
set -o verbose
#clear out status file since re-testing
rm -f status 

cd ${SW_WORKDIR}

cp ${SW_BLDDIR}/${SRCDIR}/bench/in.lj .

cat > lammps.pbs << EOF
#!/bin/bash
#PBS -N lammps.lj
#PBS -j oe
#PBS -l size=16,walltime=01:00:00
#PBS -A UT-SUPPORT
#PBS -W group_list=install
#PBS -W umask=002

set -o verbose
cd \$PBS_O_WORKDIR

echo unverified > ${SW_BLDDIR}/status
chmod g+w ${SW_BLDDIR}/status


LAMMPS_BIN=${SW_BLDDIR}/bin/lmp_xc30
aprun -n 4 \$LAMMPS_BIN -in in.lj

logsize=\`wc -c log.lammps | cut -f 1 -d " "\`
if [[ \$logsize -ne 0 ]]; then
  grep "Loop time of" log.lammps
  if [[ \$? -ne 0 ]]; then
    echo unverified > ${SW_BLDDIR}/status 
  else
    echo verified > ${SW_BLDDIR}/status
  fi
else
  echo unverified > ${SW_BLDDIR}/status
fi

JOBID=\`echo \$PBS_JOBID | cut -d "." -f1 \`

chmod 775 ${SW_BLDDIR}/status
rm ${SW_BLDDIR}/.running

cat lammps.lj.o\$JOBID >> ${SW_BLDDIR}/test.log
cat log.lammps >> ${SW_BLDDIR}/test.log

chmod 664 ${SW_BLDDIR}/test.log
EOF

#submit job and touch .running file - marker to infrastructure that
qsub lammps.pbs > ${SW_BLDDIR}/.running
if [ $? -ne 0 ]; then
  echo "Error submitting job"
  rm -f ${SW_BLDDIR}/.running
  exit 1
else
  echo "Job submitted"
  cat ${SW_BLDDIR}/.running
  exit 2
fi

cd ../

############################### if this far, return 0
exit 0
